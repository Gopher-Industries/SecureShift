version: "3.8"

services:
  backend:
    build: .
    ports:
      - "3000:3000"                    # API runs on 3000 per your logs
    env_file:
      - .env                           # make sure PORT=3000 in here (or your app defaults to 3000)
    environment:
      # Ensure the URI matches what your app actually uses
      # If you already set MONGO_URI in .env, you can remove this block.
      - MONGO_URI=mongodb://admin:adminpass@mongodb:27017/secureShift?authSource=admin
      - NODE_ENV=production
      - PORT=3000
    depends_on:
      mongodb:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').request({host:'127.0.0.1',port:3000,path:'/api-docs'}, r=>process.exit(0)).on('error',()=>process.exit(1)).end()"]
      interval: 10s
      timeout: 3s
      retries: 10

  mongodb:
    image: mongo:8                       # pin a version
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: adminpass
      # Optional, but for clarity match your app DB:
      MONGO_INITDB_DATABASE: secureShift
    volumes:
      - mongo-data:/data/db              # persist data
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    healthcheck:
      test: ["CMD", "mongosh", "--quiet", "mongodb://admin:adminpass@localhost:27017/admin?authSource=admin", "--eval", "db.adminCommand('ping').ok"]
      interval: 5s
      timeout: 3s
      retries: 20
    restart: unless-stopped

volumes:
  mongo-data:
